/**
 * @notice Simulation configuration file to add Infura as a Nova Validator
 */
import { ethers } from 'ethers'
import { SimulationConfigNew } from '../types'

const ARBSYS = '0x0000000000000000000000000000000000000064'

/**
$ yarn gen:proposalData --govChainProviderRPC https://arb1.arbitrum.io/rpc \
    --actionChainIds \
        1 \
    --actionAddresses \
        0xbf94afebfbf062a88615bc012da39d0822670aba \
    --upgradeDatas \
        $(cast calldata "perform(address[],bool[])" "[0x0fF813f6BD577c3D1cDbE435baC0621BE6aE34B4]" "[true]") \
   --upgradeValues \
        0 \
    --predecessor \
        0x0000000000000000000000000000000000000000000000000000000000000000
*/
const payload = {
  arbSysSendTxToL1Args: {
    l1Timelock: '0xE6841D92B0C345144506576eC13ECf5103aC7f49',
    calldata:
      '0x8f2a0bb000000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000000001a06eb490b60ec4cc034045046bc5c70f1b5891c0ed036e08726b42091020ee7000000000000000000000000000000000000000000000000000000000003f48000000000000000000000000000000000000000000000000000000000000000010000000000000000000000003fffbadaf827559da092217e474760e2b2c3cedd000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000001441cff79cd000000000000000000000000bf94afebfbf062a88615bc012da39d0822670aba000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000c44f71a50e0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000ff813f6bd577c3d1cdbe435bac0621be6ae34b4000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  },
}
const iface = new ethers.utils.Interface(['function sendTxToL1(address,bytes)'])
const calldata = iface.encodeFunctionData('sendTxToL1', [
  payload.arbSysSendTxToL1Args.l1Timelock,
  payload.arbSysSendTxToL1Args.calldata,
])

const call1 = {
  target: ARBSYS,
  calldata: calldata,
  value: 0,
  signature: '',
}

export const config: SimulationConfigNew = {
  type: 'new',
  daoName: 'ArbCore',
  governorType: 'arb',
  governorAddress: '0xf07ded9dc292157749b6fd268e37df6ea38395b9',
  targets: [call1.target], // Array of targets to call.
  values: [call1.value], // Array of values with each call.
  signatures: [call1.signature], // Array of function signatures. Leave empty if generating calldata with ethers like we do here.
  calldatas: [call1.calldata], // Array of encoded calldatas.
  description: 'Action to add Infura as a Nova Validator',
}
